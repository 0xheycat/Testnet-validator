

[logging]
    # Logging level. High log levels might impact performance. 0: ERROR, 1: WARN, 2: INFO, 3: DEBUG, 4: TRACE
    level = 2

[api]
    # max number of future periods considered during requests
    draw_lookahead_period_count = 10
    # port on which the node API listens for admin and node management requests. Dangerous if publicly exposed.
    bind_private = "127.0.0.1:33034"
    # port on which the node API listens for public requests. Can be exposed to the Internet.
    bind_public = "0.0.0.0:33035"
    # max number of arguments per RPC call
    max_arguments = 128
    # Path to the openrpc specification file used in `rpc.discover` method.
    openrpc_spec_path = "base_config/openrpc.json"

[execution]
    # max number of generated events kept in RAM
    max_final_events = 10000
    # maximum length of the read-only execution requests queue
    readonly_queue_length = 10
    # by how many milliseconds shoud the execution lag behind real time
    # higher values increase speculative execution lag but improve performance
    cursor_delay = 2000
    # duration of the statistics time window in milliseconds
    stats_time_window_duration = 60000

[ledger]
    # path to the initial ledger
    initial_ledger_path = "base_config/initial_ledger.json"
    # path to the disk ledger db directory
    disk_ledger_path = "storage/ledger/rocks_db"
    # length of the changes history. Higher values allow bootstrapping nodes with slower connections
    final_history_length = 100

[consensus]
    # max number of previously discarded blocks kept in RAM
    max_discarded_blocks = 100
    # if a block is at least future_block_processing_max_periods periods in the future, it is just discarded
    future_block_processing_max_periods = 100
    # max number of blocks in the future kept in RAM
    max_future_processing_blocks = 400
    # max number of blocks waiting for dependencies
    max_dependency_blocks = 2048
    # number of final periods that must be kept at all times (increase to more resilience to short network disconnections, high values will increase RAM usage.)
    force_keep_final_periods = 10

    # max milliseconds to wait while sending an event before dropping it
    max_send_wait = 0
    # useless blocks are pruned every block_db_prune_interval ms
    block_db_prune_interval = 5000

    # considered timespan for stats info
    stats_timespan = 60000
    # max number of item returned per query
    max_item_return_count = 100

[protocol]
    # timeout after which without answer a hanshake is ended
    message_timeout = 5000
    # timeout after whick we consider a node does not have the block we asked for
    ask_block_timeout = 10000
    # max cache size for which blocks our node knows about
    max_known_blocks_size = 1024
    # max cache size for which blocks a foreign node knows about
    max_node_known_blocks_size = 1024
    # max cache size for which blocks a foreign node asked for
    max_node_wanted_blocks_size = 1024
    # max number of blocks we can ask simultaneously per node
    max_simultaneous_ask_blocks_per_node = 128
    # max milliseconds to wait while sending an event before dropping it
    max_send_wait = 0
    # max cache size for which operations your node knows about
    max_known_ops_size = 2000000
    # max cache size for which operations a foreign node knows about
    max_node_known_ops_size = 200000
    # max cache size for which endorsements our node knows about
    max_known_endorsements_size = 2048
    # max cache size for which endorsements a foreign node knows about
    max_node_known_endorsements_size = 2048
    # Maximum number of batches in the memory buffer.
    # Dismiss the new batches if overflow
    operation_batch_buffer_capacity = 10024
    # Immediately announce ops if overflow
    operation_announcement_buffer_capacity = 2000
    # Start processing batches in the buffer each `operation_batch_proc_period` in millisecond
    operation_batch_proc_period = 500
    # All operations asked are prune each `operation_asked_pruning_period` millisecond
    asked_operations_pruning_period = 100000
    # Interval at which operations are announced in batches.
    operation_announcement_interval = 300
    # Max number of operation per message, same as network param but can be smaller
    max_operations_per_message = 1024
    # Time threshold after which operation are not propagated
    max_operations_propagation_time = 32000
    # Time threshold after which operation are not propagated
    max_endorsements_propagation_time = 48000

[network]
    # port on which to listen for protocol communication
    bind = "[::]:31244"
    # port used by protocol
    protocol_port = 31244
    # timeout for connection establishment
    connect_timeout = 3000
    # attempt a connection to available peers when needed every wakeup_interval milliseconds
    wakeup_interval = 5000
    # path to the local peers storage file
    peers_file = "storage/peers.json"
    # path to the initial peers file
    initial_peers_file = "base_config/initial_peers.json"
    # max number of inbound connections per ip
    max_in_connections_per_ip = 5
    # max number of stored idle peers
    max_idle_peers = 10000
    # max number of stored banned peers
    max_banned_peers = 100
    # max number of advertized peers
    max_advertise_length = 5000
    # peers are dumped to file every peers_file_dump_interval milliseconds
    peers_file_dump_interval = 30000
    # max size of sent messages
    max_message_size = 1048576000
    # timeout when waiting for a message from a foreign node
    message_timeout = 5000
    # interval in milliseconds for asking peer lists from peers we are connected to
    ask_peer_list_interval = 600000
    # path to the node key (not the staking key)
    keypair_file = "config/node_privkey.key"
    # max number of asked blocks per message
    max_ask_blocks_per_message = 128
    # max number of operations per message
    max_operations_per_message = 1024
    # max number of endorsements per message
    max_endorsements_per_message = 1024
    # max milliseconds to wait while sending a node event before dropping it
    max_send_wait_node_event = 5_000
    # max milliseconds to wait while sending a network event before dropping it
    max_send_wait_network_event = 0
    # we forget we banned a node after ban_timeout milliseconds
    ban_timeout = 3600000
    # Timeout duration when in handshake we respond with a PeerList
    # (on max in connection reached we send a list of peers)
    peer_list_send_timeout = 100
    # Max number of in connection overflowed managed by the handshake
    # that send a list of peers
    max_in_connection_overflow = 100
    # Read limitation for a connection in bytes per seconds
    max_bytes_read = 20_000_000.0
    # Write limitation for a connection in bytes per seconds
    max_bytes_write = 20_000_000.0

    [network.peer_types_config]
    Standard = { target_out_connections = 10, max_out_attempts = 10, max_in_connections = 15}
    Bootstrap = { target_out_connections = 1, max_out_attempts = 1, max_in_connections = 1}
    WhiteListed = { target_out_connections = 2, max_out_attempts = 2, max_in_connections = 3}

[bootstrap]
    # list of bootstrap (ip, node id)
    bootstrap_list = [
        ["149.202.86.103:31245", "P12UbyLJDS7zimGWf3LTHe8hYY67RdLke1iDRZqJbQQLHQSKPW8j"],
        ["149.202.89.125:31245", "P12vxrYTQzS5TRzxLfFNYxn6PyEsphKWkdqx2mVfEuvJ9sPF43uq"],
        ["158.69.120.215:31245", "P12rPDBmpnpnbECeAKDjbmeR19dYjAUwyLzsa8wmYJnkXLCNF28E"],
        ["158.69.23.120:31245", "P1XxexKa3XNzvmakNmPawqFrE9Z2NFhfq1AhvV1Qx4zXq5p1Bp9"],
        ["198.27.74.5:31245", "P1qxuqNnx9kyAMYxUfsYiv2gQd5viiBX126SzzexEdbbWd2vQKu"],
        ["198.27.74.52:31245", "P1hdgsVsd4zkNp8cF1rdqqG6JPRQasAmx12QgJaJHBHFU1fRHEH"],
        ["54.36.174.177:31245", "P1gEdBVEbRFbBxBtrjcTDDK9JPbJFDay27uiJRE3vmbFAFDKNh7"],
["95.216.2.232:31245", "P12icw9DcUD6rBixYwbg44dSgFDYVQM3r8Lv4f9LvcmE9S2JDmkL"],
["38.242.128.175:31245", "P124o9ouf2EUDXDrGsECKr2WSxmAS1d9CcpgUEVNun6s9hfT4oiU"],
["149.102.157.187:31245", "P12mc4TdXRiYdWCsYFQwym6MCg94ENM3zYEdK21rPEg1cLhumvDv"],
["77.232.42.168:31245", "P12f4xJ79rU7v5wEPQhFJgeCoRr54HbBYuEPiuHSEgWHqEKi9Hcm"],
["65.21.191.82:31245", "P1xDpopcoA6zofpkWNDNtkPePQjqLy3iAmP6NrNKoA4y8eggU5c"],
["94.130.170.203:31245", "P1yPTSmu58NRYKVshe4Jn61bhyjiXeyarayJADrV7X34YnW8Aep"],
["161.35.194.212:31245", "P1Pzgepr2EEL1mk7ruL2vZtZ3JiUV1tYBmyHz6a3eMV2WdtyYuX"],
["178.206.234.10:31245", "P12ERUpkNxjkroH9zF2n2tF4Dj2QV9X6DH4RePFFP2g1FvE9HUqW"],
["80.87.202.42:31245", "P16D8K1QBcDTr2h4C7qQ3ap2LUkkqZWa1jCdA9zuFp8MsZt69rj"],
["184.163.42.223:31245", "P1Ewsp1HYoU8gAeAYs7zP2Hm9ak2RzwPsTQXK9uAdBV7D8AYFd8"],
["94.181.45.219:31245", "P12jgnHCZEfhHbi8ZTgLo4FCbFGxCEt4KfpMYwmRvjyYAukv45o2"],
["147.182.191.215:31245", "P12k716iL58GKndcZU2G4CyFtJszzqTJ2YPRTG3MzX24T1XrVsy8"],
["162.55.184.48:31245", "P1PnLYRE7wEK7t7Kuu2v4DDMvpnRtj5h5mF5QPKEv2NPQ8sSHCJ"],
["65.108.234.11:31245", "P1gPQzvRjMHyXaVfeWMQPRDfxqCVuXHwtWPYfwLbEoGLHdL3GPR"],
["157.90.172.210:31245", "P122iHawSXefCMCv1PN8VanyM1DQYoEKDo8j5iUCebMbr7DAw55y"],
["78.47.224.176:31245", "P12TJ1u5GsfUb2wSfN7843E3zHKVwqKzzqU6Z7y9xgv7gUADae4x"],
["54.36.174.177:31245", "P1gEdBVEbRFbBxBtrjcTDDK9JPbJFDay27uiJRE3vmbFAFDKNh7"],
["154.26.132.217:31245", "P1gAKYH55UJHyv5V8vePSdLwUBVGtimwTn6tvF29K8GmPAjHWkK"],
["82.223.10.164:31245", "P12mqWgZdS3qYQcgYXD4PPtL128U7bfTSSsZRWHn4mQCcaYc93y3"],
["207.180.221.86:31245", "P1HEGx8JMUjTKiPNVf6KPsCa3cvrV3Bfh61CJXwqKRUeyhBDADd"],
["95.216.148.136:31245", "P1SDGHkgMKbzceHMZitrAsySJiwpYnkERErXaMGW6HvLuNCfzFf"],
["65.108.221.203:31245", "P12WuMCLswtzJWNaVmveXsf6Zf5jnNBx9r4Bq69rW2Ey91Lzpt9G"],
["158.69.120.215:31245", "P12rPDBmpnpnbECeAKDjbmeR19dYjAUwyLzsa8wmYJnkXLCNF28E"],
["83.202.151.15:31245", "P12as6Aszw4sbNkMwF55dpeBDK1CsRRoya6U2bwWkNfZEHT8uZDZ"],
["78.107.234.44:31245", "P1tBD958SEeRN9tL3BaNNf8s9L7dimwM9fuGH25nihrUhkMrQ72"],
["193.201.15.244:31245", "P12mK3XtaDovD386EKMFgUPSdV1nndycgwBc36Fj3jA8tsHSpqoN"],
["207.180.215.214:31245", "P1ZoC3y6qyj3c5H6ToDFcR8AcZY5YJgb1y1HLHMUaZVzHdGNg3Y"],
["194.187.110.19:31245", "P1tK6BYtxrcRqDr693WUSHeZRuwRQzLxiuSLmZGXGGqLXVo777P"],
["88.198.215.110:31245", "P1uvS2kmmEhRNbwQDVZtfmbXNqHYfJ75FdAkgoA1MzDkQ9WAW2D"],
["154.26.132.182:31245", "P137JJeU7dt6MbTX87rB9s9geX3gYRUmMmZFMuoo8Hru5pzKRcm"],
["82.64.84.25:31245", "P1gvaKFbbm9o9Cq9P7AJeeqnpWZ1wqvAoXp21nfPvvrhgPhkcai"],
["157.90.172.210:31245", "P122iHawSXefCMCv1PN8VanyM1DQYoEKDo8j5iUCebMbr7DAw55y"],
["88.201.196.152:31245", "P1bUFyZYvwhgy7D61pHZTYXZYjJHEqLLoxP5Eq9kQ1CE19KuvoU"],
["185.196.20.94:31245", "P127MgAxqXEVQMXKYWGWBr157rK4TNJuLMK9oeJNDXDdTh33YWoB"],
["185.146.51.224:31245", "P1jvF4Kgr1M17BRYJRHB2L4W3BXKP5xwKcmZjpL8uXwzAWG61SH"],
["185.205.244.120:31245", "P122Y3ET5uKaUEtf1yBamiSVba4eqco2wCREe6GJzUjNCGeGxi4D"],
["91.203.81.148:31245", "P1MvApgRYuJdvAV2UcmFV3h8WertuoncrujjjsahtGTj4Pu574R"],
["142.132.199.236:31245", "P1ui2mwRJw4QDRXLEaSvMXkR52gxHvpbTh5NiyBHqWXn5kZfwH5"],
["154.26.132.181:31245", "P12BVQeGQHZNsz1RC3W3QMteRBAfsvovep5oLZDPaf4xuJMgNZwU"],
["62.183.96.174:31245", "P12w5eRUaNfzcRYCx51Dj7dsHre6kR5p65RZs5tA667iAJ5PKRMZ"],
["167.114.145.158:31245", "P12Kkrj1ReYtTzapYC2fFzZStUSPmAz7qo4gXf3RC18nnFofdYko"],
["161.97.141.80:31245", "P12jpADZRE2jiXF29X9fzULiRa9YfjmrHqTVoXFMTQh3brEQvUXJ"],
["51.38.194.32:31245", "P12BFNZSKZJznpPGNs7eMpziuKxzRUHMzfrKeC7d91w9UoPaa7Et"],
["95.216.148.136:31245", "P1SDGHkgMKbzceHMZitrAsySJiwpYnkERErXaMGW6HvLuNCfzFf"],
["194.163.160.246:31245", "P124ejBRB6VGNWE9JdF6qspom6xeZb94yavfnkuhWZCJajqm7DNp"],
["80.11.168.199:31245", "P12DLs1C7YKBmLWa2rbtbapabsRxmK7FrfYstzm5ERQrG1nNKu6a"],
["185.209.230.60:31245", "P12MzbJDwYuW9HNCT5CtDvEaSCUJrLfjMCPj7EFkSA7Kc35J922m"],
["194.187.110.19:31245", "P1tK6BYtxrcRqDr693WUSHeZRuwRQzLxiuSLmZGXGGqLXVo777P"],
["185.216.75.176:31245", "P12fTqygwvpKu7g9ToQizSPbWcDTaePqCrsQwHdpqbqvKP5Sp62s"],
["138.201.139.207:31245", "P1dwY5JtfdNMVrsbkdrcWu3GN4VDDzqpPsXnURae9ikiuLreBUq"],
["38.242.142.247:31245", "P1Wc51WpLE6ej45mgKw3XZGkWb2U4aH3pbiUvz8iqhZ87g48rem"],
["91.65.70.74:31245", "P1gpCEsPvPgnxGNCfcHaYRdgvfR6mKu3j1oz35jndzfUYxfcgBN"],
["167.86.71.232:31245", "P12J9bpRyKB4HACJVXX2s2Crjx2ESwVnnPj5znR8e19C3BYvs7TF"],
["149.102.157.65:31245", "P17s6DRBRPhsrM9dYao4MhdgYZAdj74BaxoRG8QpZ7J36dP8m3p"],
["193.201.15.244:31245", "P12mK3XtaDovD386EKMFgUPSdV1nndycgwBc36Fj3jA8tsHSpqoN"],
["207.180.242.141:31245", "P12fErdTX9aiwNMbk2TG4jbKKovLHrWRwD63wJKnXksJjLJxYcoz"],
["135.181.111.221:31245", "P12m1G3oKLc8coj5txeB2URtFFDNnMqRz6nXAaGnYGbhtVwb8j2N"],
["95.216.198.216:31245", "P15CydY6WPVTHkdMjLovvRRWx4W4vpjzWfh7oSTUVwFprwoeB4K"],
["176.163.175.28:31245", "P1Lc1GcYdhrKNuT8MCte81dCior4mGJSNgbU9ytz4bqAG9RPju6"],
["46.4.71.222:31245", "P1UTDZRssv2x9ikrHrZ9YD6atE68EPLEjenSTsVKLeqwMUVZP4V"],
["185.69.52.194:31245", "P19pFgS9c9wAoM59jo97TTeChGD7zDgE7mMmPPvJp9HX2VocUsd"],
["164.68.114.72:31245", "P12utqQrCLQArHD8sNzNXpWwkig8S9xKAWUiNZ2E5pA6ArkdgJWi"],
["88.201.196.152:31245", "P1bUFyZYvwhgy7D61pHZTYXZYjJHEqLLoxP5Eq9kQ1CE19KuvoU"],
["92.94.69.70:31245", "P12srgSqw9zwVZq8c7iixN9ZP782xW7o8x91tr9BUaaURSswQBrd"],
["89.58.37.5:31245", "P1mpPVbrMPJgEPLhS3oKai7D72UTqQ68nyLAwbBvkK3hTwiNNvX"],
["95.217.166.220:31245", "P12C2VmSSJVBPEkNDzCx7XfNncFpo57GoDX2QhkgPMbNiyRsmH4u"],
["45.88.106.199:31245", "P12Yr9DLJwfp5wF7DvrYHnAmfQmLCgv3E1zHTcWbbCwkP74mrv2w"],
["144.76.194.76:31245", "P1KxtZTuzH9eXsP7D8M3whqPazy6NGjvqQR1zqKqBSExMUT1Uyg"],
["5.255.104.42:31245", "P14ejVgWxjzLwfh7W2Gq2fiqGUFqwqaywHiqxuGYiBhn6RuPZ3M"],
["176.124.202.60:31245", "P12gXCtzyaJcKLhsofvQQavV6igB2eoSFCYLgo1x1u1WFxk9ooLv"],
["45.8.145.244:31245", "P121KYQYAdo5hheM6uyL3ioVV7hMooRo36WpadgVkXMjshBZqqSi"],
        ["51.75.60.228:31245", "P13Ykon8Zo73PTKMruLViMMtE2rEG646JQ4sCcee2DnopmVM3P5"]
    ]
    # Path to the bootstrap whitelist file. This whitelist define IPs that can bootstrap on your node.
    bootstrap_whitelist_file = "base_config/bootstrap_whitelist.json"
    # Path to the bootstrap blacklist file. This whitelist define IPs that will not be able to bootstrap on your node. This list is optional.
    bootstrap_blacklist_file = "base_config/bootstrap_blacklist.json"
    # [optionnal] port on which to listen for incoming bootstrap requests
    bind = "[::]:31245"
    # timeout to establish a bootstrap connection
    connect_timeout = 15000
    # delay in milliseconds to wait between consecutive bootstrap attempts
    retry_delay = 15000
    # if ping is too high bootstrap will be interrupted after max_ping milliseconds
    max_ping = 10000
    # timeout for incoming message readout
    read_timeout = 100000
    # timeout for message sending
    write_timeout = 100000
    # timeout for incoming error message readout
    read_error_timeout = 200
    # timeout for message error sending
    write_error_timeout = 200
    # when enabled, apply a correction to the local computer clock to match bootstrap server time
    enable_clock_synchronization = false
    # [server] data is cached for cache duration milliseconds
    cache_duration = 15000
    # max number of simulataneous bootstraps for server
    max_simultaneous_bootstraps = 2
    # max size of recently bootstrapped IP cache
    ip_list_max_size = 10000
    # refuse consecutive bootstrap attempts from a given IP when the interval between them is lower than per_ip_min_interval milliseconds
    per_ip_min_interval = 180000
    # Read-Write limitation for a connection in bytes per seconds (about the bootstrap specifically)
    max_bytes_read_write = 20_000_000.0

[pool]
    # max number of operations kept per thread
    max_pool_size_per_thread = 25000
    # if an operation is too much in the future it will be ignored
    max_operation_future_validity_start_periods = 100
    # max number of endorsements kept
    max_endorsement_count = 10000
    # max number of items returned per query
    max_item_return_count = 100

[selector]
    # Maximum number of computed cycle's draws we keep in cache
    max_draw_cache = 10
    # Path to the initial roll distribution
    initial_rolls_path = "base_config/initial_rolls.json"

[factory]
    # initial delay in milliseconds to wait before starting productin to avoid double staking on node restart
    initial_delay = 100
    # path to your staking wallet
    staking_wallet_path = "config/staking_wallet.dat"
